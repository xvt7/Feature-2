name: 'OAMD-Pipeline'

# TODO:
# Add variables for when it runs manually
# BUILD default False, DEPLOY default False, ENVIRONMENT default CI, VERSION

# Job: build-ci-frontend
# Trigger: Pull Request
# Steps:
  # NPM setup
  # NPM ci
  # NPM run build
  # NPM test
  # Or setup NPM and run dockerfile if those are already included
  
# Job: build-image-backend
# Trigger: Pull Request
# Steps:
  # .NET setup
  # .NET nuget restore
  # .NET publish
  # .NET test
  # Or setup .NET and run dockerfile if those are already included
  
# Job: jira-feedback
# Trigger: When pull request is merged into develop
# Steps:
  # If branch name contains a JIRA ticket, comment that branch was successfully merged into develop
  # Else continue pipeline, make sure this step does not end pipeline on failure
  
# Job: build-image-frontend
# Trigger: Manual trigger
# Steps:
  # NPM setup
  # Build dockerfile and tag with VERSION variable
  # Push to ImageHub
  
# Job: build-image-backend
# Trigger: Manual trigger
# Steps:
  # .NET setup
  # Build dockerfile and tag with VERSION variable
  # Push to ImageHub
  
# Job: trigger-downstream-terraform
# Trigger: Manual trigger
# Steps:
  # Start oamd-infra-terraform repository pipeline
  # should pass ENVIRONEMT, VERSION variables along

# SonarQube, Fortify, Trivy, NeuVector


on:
  workflow_dispatch:
  push:
    branches:
      - ryantest
jobs:
   build-ci-frontend:
    runs-on: [self-hosted, edso-node-builder]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
 #- name: Setup node
      #  uses: actions/setup-node@v4
      #  with:
      #    node-version: 16.??.x
      - name: Setup node
        uses: actions/setup-node@v4
        with:
         node-version: 16.??.x

         
      #- name: NPM Install
      #  run: |
      #    cd react-app
      #    npm ci

      
      - name: NPM Install
        run: |
          cd react-app
          npm ci
          
#- name: NPM Build    
      - name: NPM Build
        run: | 
          cd react-app
          npm run build
          
#- name: NPM Test
      - name: NPM Test
        run: | 
          cd react-app
          npm run test
 # Push and Build react-app         
      - name: podman login
        run: podman login imagehub.cdc.gov:6989 -u "${{ secrets.DEV_CICD_SVC }}" -p "${{ secrets.DEV_CICD_SVC}}"
        
      - name: build image
        working-directory: react-app
        run: podman build . -t imagehub.cdc.gov:6989/docker-dev2/react-app
        
      - name: push image
        working-directory: react-app
        run: podman push imagehub.cdc.gov:6989/docker-dev2/react-app

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
